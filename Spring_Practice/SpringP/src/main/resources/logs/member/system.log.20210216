21-02-16 11:19:46 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 11:19:46 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 11:19:46 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 11:19:47 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 11:19:47 [DEBUG] AfterReturningAspect.loggerAdvice{28} - [log] : 유저 user02 접속
21-02-16 11:19:47 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 11:19:47 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 11:23:57 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 11:23:57 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 11:23:57 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 11:23:58 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 11:23:58 [DEBUG] AfterReturningAspect.loggerAdvice{28} - [log] : 유저 user02 접속
21-02-16 11:23:58 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 11:23:58 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 11:50:25 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 11:50:25 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 11:50:25 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 11:50:26 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 11:50:26 [DEBUG] AfterReturningAspect.loggerAdvice{28} - [log] : 유저 user02 접속
21-02-16 11:50:26 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 11:50:26 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 11:53:51 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 11:53:51 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 11:53:51 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 11:53:52 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 11:53:52 [DEBUG] AfterReturningAspect.loggerAdvice{28} - [log] : 유저 user02 접속
21-02-16 11:53:52 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 11:53:52 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 12:05:43 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 12:05:43 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 12:05:43 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 12:05:44 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 12:05:44 [DEBUG] AfterReturningAspect.loggerAdvice{28} - [log] : 유저 user02 접속
21-02-16 12:05:44 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 12:05:44 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 12:08:00 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 12:08:00 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 12:08:00 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 12:08:02 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 12:08:02 [DEBUG] AfterReturningAspect.loggerAdvice{28} - [log] : 유저 user02 접속
21-02-16 12:08:02 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 12:08:02 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 12:09:12 [ERROR] DispatcherServlet.initServletBean{534} - Context initialization failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [C:\SpringWorkspace\.metadata\.plugins\org.eclipse.wst.server.core\tmp0\wtpwebapps\SpringP\WEB-INF\classes\com\kh\spring\common\aop\AfterReturningAspect.class]; nested exception is java.nio.channels.ClosedByInterruptException
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:454)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:316)
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:276)
	at org.springframework.context.annotation.ComponentScanBeanDefinitionParser.parse(ComponentScanBeanDefinitionParser.java:90)
	at org.springframework.beans.factory.xml.NamespaceHandlerSupport.parse(NamespaceHandlerSupport.java:74)
	at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseCustomElement(BeanDefinitionParserDelegate.java:1391)
	at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseCustomElement(BeanDefinitionParserDelegate.java:1371)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.parseBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:179)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.doRegisterBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:149)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:96)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.registerBeanDefinitions(XmlBeanDefinitionReader.java:514)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:394)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:337)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:305)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:188)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:195)
	at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:125)
	at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:94)
	at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:133)
	at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:637)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:522)
	at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:702)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:668)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:716)
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:591)
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:530)
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:170)
	at javax.servlet.GenericServlet.init(GenericServlet.java:158)
	at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1144)
	at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1091)
	at org.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:985)
	at org.apache.catalina.core.StandardContext.loadOnStartup(StandardContext.java:4875)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5189)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardContext.reload(StandardContext.java:3752)
	at org.apache.catalina.loader.WebappLoader.backgroundProcess(WebappLoader.java:297)
	at org.apache.catalina.core.StandardContext.backgroundProcess(StandardContext.java:5531)
	at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1381)
	at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1385)
	at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1385)
	at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.run(ContainerBase.java:1353)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.nio.channels.ClosedByInterruptException
	at java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:202)
	at sun.nio.ch.FileChannelImpl.read(FileChannelImpl.java:164)
	at sun.nio.ch.ChannelInputStream.read(ChannelInputStream.java:65)
	at sun.nio.ch.ChannelInputStream.read(ChannelInputStream.java:109)
	at sun.nio.ch.ChannelInputStream.read(ChannelInputStream.java:103)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at org.springframework.asm.ClassReader.readStream(ClassReader.java:315)
	at org.springframework.asm.ClassReader.<init>(ClassReader.java:283)
	at org.springframework.core.type.classreading.SimpleMetadataReader.getClassReader(SimpleMetadataReader.java:58)
	at org.springframework.core.type.classreading.SimpleMetadataReader.<init>(SimpleMetadataReader.java:50)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:103)
	at org.springframework.core.type.classreading.CachingMetadataReaderFactory.getMetadataReader(CachingMetadataReaderFactory.java:123)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:430)
	... 42 more
21-02-16 12:09:47 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 12:09:47 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 12:09:47 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 12:09:47 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 12:09:47 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 12:09:47 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 12:09:49 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 12:09:49 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 12:09:49 [DEBUG] AfterReturningAspect.loggerAdvice{28} - [log] : 유저 user02 접속
21-02-16 12:09:49 [DEBUG] AfterReturningAspect.loggerAdvice{28} - [log] : 유저 user02 접속
21-02-16 12:09:49 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 12:09:49 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 12:09:49 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 12:09:49 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 12:14:36 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 12:14:36 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 12:14:36 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 12:14:37 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 12:14:38 [DEBUG] AfterReturningAspect.loggerAdvice{28} - [log] : 유저 user02 접속
21-02-16 12:14:38 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 12:14:38 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 12:16:51 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 12:16:51 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 12:16:51 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 12:16:52 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 12:16:52 [DEBUG] AfterReturningAspect.loggerAdvice{28} - [log] : 유저 user02 접속
21-02-16 12:16:52 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 12:16:52 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 12:30:18 [ERROR] DispatcherServlet.initServletBean{534} - Context initialization failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [C:\SpringWorkspace\.metadata\.plugins\org.eclipse.wst.server.core\tmp0\wtpwebapps\SpringP\WEB-INF\classes\com\kh\spring\common\aop\AfterReturningAspect.class]; nested exception is java.nio.channels.ClosedByInterruptException
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:454)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:316)
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:276)
	at org.springframework.context.annotation.ComponentScanBeanDefinitionParser.parse(ComponentScanBeanDefinitionParser.java:90)
	at org.springframework.beans.factory.xml.NamespaceHandlerSupport.parse(NamespaceHandlerSupport.java:74)
	at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseCustomElement(BeanDefinitionParserDelegate.java:1391)
	at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseCustomElement(BeanDefinitionParserDelegate.java:1371)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.parseBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:179)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.doRegisterBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:149)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:96)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.registerBeanDefinitions(XmlBeanDefinitionReader.java:514)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:394)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:337)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:305)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:188)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:195)
	at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:125)
	at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:94)
	at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:133)
	at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:637)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:522)
	at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:702)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:668)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:716)
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:591)
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:530)
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:170)
	at javax.servlet.GenericServlet.init(GenericServlet.java:158)
	at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1144)
	at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1091)
	at org.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:985)
	at org.apache.catalina.core.StandardContext.loadOnStartup(StandardContext.java:4875)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5189)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardContext.reload(StandardContext.java:3752)
	at org.apache.catalina.loader.WebappLoader.backgroundProcess(WebappLoader.java:297)
	at org.apache.catalina.core.StandardContext.backgroundProcess(StandardContext.java:5531)
	at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1381)
	at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1385)
	at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1385)
	at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.run(ContainerBase.java:1353)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.nio.channels.ClosedByInterruptException
	at java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:202)
	at sun.nio.ch.FileChannelImpl.read(FileChannelImpl.java:164)
	at sun.nio.ch.ChannelInputStream.read(ChannelInputStream.java:65)
	at sun.nio.ch.ChannelInputStream.read(ChannelInputStream.java:109)
	at sun.nio.ch.ChannelInputStream.read(ChannelInputStream.java:103)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at org.springframework.asm.ClassReader.readStream(ClassReader.java:315)
	at org.springframework.asm.ClassReader.<init>(ClassReader.java:283)
	at org.springframework.core.type.classreading.SimpleMetadataReader.getClassReader(SimpleMetadataReader.java:58)
	at org.springframework.core.type.classreading.SimpleMetadataReader.<init>(SimpleMetadataReader.java:50)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:103)
	at org.springframework.core.type.classreading.CachingMetadataReaderFactory.getMetadataReader(CachingMetadataReaderFactory.java:123)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:430)
	... 42 more
21-02-16 12:30:39 [WARN ] PageNotFound.noHandlerFound{1251} - No mapping for GET /spring/list.bo
21-02-16 12:34:49 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 12:34:49 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 12:34:49 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 12:34:50 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 12:34:50 [DEBUG] AfterReturningAspect.loggerAdvice{28} - [log] : 유저 user02 접속
21-02-16 12:34:50 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 12:34:50 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 12:34:52 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 12:34:52 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 12:35:17 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 12:35:17 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 12:35:32 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 12:35:32 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 12:38:42 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 12:38:42 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 12:39:02 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 12:39:02 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 12:39:02 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 12:39:03 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 12:39:03 [DEBUG] AfterReturningAspect.loggerAdvice{28} - [log] : 유저 user02 접속
21-02-16 12:39:03 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 12:39:03 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 12:39:04 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 12:39:04 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 12:41:24 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 12:41:24 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 12:42:36 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 12:42:36 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 12:43:10 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 12:43:10 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 12:44:17 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 12:44:17 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 12:44:23 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 12:44:23 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 12:45:04 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 12:45:04 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 12:45:55 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 12:45:55 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 12:46:23 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 12:46:23 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 12:47:43 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 12:47:43 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 12:50:01 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 12:50:01 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 12:54:04 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 12:54:04 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 12:55:38 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 12:55:38 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 12:59:25 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 12:59:25 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 13:37:49 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 13:37:49 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 13:37:53 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateMember()
21-02-16 13:37:53 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.updateMember()
21-02-16 13:37:53 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.updateMember()
21-02-16 13:37:53 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.updateMember()
21-02-16 13:37:53 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.updateMember()
21-02-16 13:37:56 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 13:37:56 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 13:38:19 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 13:38:19 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 13:38:19 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 13:38:20 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 13:38:20 [DEBUG] AfterReturningAspect.loggerAdvice{28} - [log] : 유저 user02 접속
21-02-16 13:38:20 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 13:38:20 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 13:38:21 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 13:38:21 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 13:38:23 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateMember()
21-02-16 13:38:23 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.updateMember()
21-02-16 13:38:23 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.updateMember()
21-02-16 13:38:23 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.updateMember()
21-02-16 13:38:23 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.updateMember()
21-02-16 13:38:23 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateMember()
21-02-16 13:38:25 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateMember()
21-02-16 13:38:25 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.updateMember()
21-02-16 13:38:25 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.updateMember()
21-02-16 13:38:25 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.updateMember()
21-02-16 13:38:25 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.updateMember()
21-02-16 13:38:25 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateMember()
21-02-16 13:39:15 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 13:39:15 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 13:39:15 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 13:39:16 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 13:39:16 [DEBUG] AfterReturningAspect.loggerAdvice{28} - [log] : 유저 user02 접속
21-02-16 13:39:16 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 13:39:16 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 13:39:17 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 13:39:17 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 13:40:38 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 13:40:38 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 13:40:40 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateMember()
21-02-16 13:40:40 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.updateMember()
21-02-16 13:40:40 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.updateMember()
21-02-16 13:40:40 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.updateMember()
21-02-16 13:40:40 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.updateMember()
21-02-16 13:40:40 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateMember()
21-02-16 13:40:59 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateMember()
21-02-16 13:40:59 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.updateMember()
21-02-16 13:40:59 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.updateMember()
21-02-16 13:40:59 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.updateMember()
21-02-16 13:40:59 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.updateMember()
21-02-16 13:40:59 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateMember()
21-02-16 13:41:30 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 13:41:30 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 13:41:30 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 13:41:31 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 13:41:31 [DEBUG] AfterReturningAspect.loggerAdvice{28} - [log] : 유저 user02 접속
21-02-16 13:41:31 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 13:41:31 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 13:41:32 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 13:41:32 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 13:41:44 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 13:41:44 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 13:47:53 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 13:47:53 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 13:49:06 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 13:49:06 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 13:49:43 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 13:49:43 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 13:50:03 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 13:50:03 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 13:50:18 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 13:50:18 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 13:50:19 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 13:50:19 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 13:50:33 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 13:50:33 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 13:50:49 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 13:50:49 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 13:51:12 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 13:51:12 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 13:52:04 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 13:52:04 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 13:52:10 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 13:52:10 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 13:52:40 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 13:52:40 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 13:52:40 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 13:52:40 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:02:38 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:02:38 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:03:47 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:03:47 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:03:48 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:03:48 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:03:54 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:03:54 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:03:55 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:03:55 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:04:46 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:04:46 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:05:06 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:05:06 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:05:14 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:05:14 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:09:10 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:09:10 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:12:25 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:12:25 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:13:14 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:13:14 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:13:23 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:13:23 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:13:24 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:13:24 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:13:40 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:13:40 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:15:14 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:15:14 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:17:28 [WARN ] XmlWebApplicationContext.refresh{558} - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'memberController' defined in file [C:\SpringWorkspace\.metadata\.plugins\org.eclipse.wst.server.core\tmp0\wtpwebapps\SpringP\WEB-INF\classes\com\kh\spring\member\controller\MemberController.class]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.kh.spring.member.controller.MemberController]: Constructor threw exception; nested exception is java.lang.Error: Unresolved compilation problems: 
	Syntax error, insert "}" to complete ClassBody
	Syntax error on token ",", FormalParameter expected after this token
	Syntax error on token "}", delete this token

21-02-16 14:17:28 [ERROR] DispatcherServlet.initServletBean{534} - Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'memberController' defined in file [C:\SpringWorkspace\.metadata\.plugins\org.eclipse.wst.server.core\tmp0\wtpwebapps\SpringP\WEB-INF\classes\com\kh\spring\member\controller\MemberController.class]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.kh.spring.member.controller.MemberController]: Constructor threw exception; nested exception is java.lang.Error: Unresolved compilation problems: 
	Syntax error, insert "}" to complete ClassBody
	Syntax error on token ",", FormalParameter expected after this token
	Syntax error on token "}", delete this token

	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1320)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:702)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:668)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:716)
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:591)
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:530)
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:170)
	at javax.servlet.GenericServlet.init(GenericServlet.java:158)
	at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1144)
	at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1091)
	at org.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:985)
	at org.apache.catalina.core.StandardContext.loadOnStartup(StandardContext.java:4875)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5189)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardContext.reload(StandardContext.java:3752)
	at org.apache.catalina.loader.WebappLoader.backgroundProcess(WebappLoader.java:297)
	at org.apache.catalina.core.StandardContext.backgroundProcess(StandardContext.java:5531)
	at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1381)
	at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1385)
	at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1385)
	at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.run(ContainerBase.java:1353)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.kh.spring.member.controller.MemberController]: Constructor threw exception; nested exception is java.lang.Error: Unresolved compilation problems: 
	Syntax error, insert "}" to complete ClassBody
	Syntax error on token ",", FormalParameter expected after this token
	Syntax error on token "}", delete this token

	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:213)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1312)
	... 31 more
Caused by: java.lang.Error: Unresolved compilation problems: 
	Syntax error, insert "}" to complete ClassBody
	Syntax error on token ",", FormalParameter expected after this token
	Syntax error on token "}", delete this token

	at com.kh.spring.member.controller.MemberController.<init>(MemberController.java:313)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:200)
	... 33 more
21-02-16 14:26:08 [ERROR] DispatcherServlet.initServletBean{534} - Context initialization failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [C:\SpringWorkspace\.metadata\.plugins\org.eclipse.wst.server.core\tmp0\wtpwebapps\SpringP\WEB-INF\classes\com\kh\spring\common\aop\AfterReturningAspect.class]; nested exception is java.nio.channels.ClosedByInterruptException
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:454)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:316)
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:276)
	at org.springframework.context.annotation.ComponentScanBeanDefinitionParser.parse(ComponentScanBeanDefinitionParser.java:90)
	at org.springframework.beans.factory.xml.NamespaceHandlerSupport.parse(NamespaceHandlerSupport.java:74)
	at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseCustomElement(BeanDefinitionParserDelegate.java:1391)
	at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseCustomElement(BeanDefinitionParserDelegate.java:1371)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.parseBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:179)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.doRegisterBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:149)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:96)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.registerBeanDefinitions(XmlBeanDefinitionReader.java:514)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:394)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:337)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:305)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:188)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:195)
	at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:125)
	at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:94)
	at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:133)
	at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:637)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:522)
	at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:702)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:668)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:716)
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:591)
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:530)
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:170)
	at javax.servlet.GenericServlet.init(GenericServlet.java:158)
	at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1144)
	at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1091)
	at org.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:985)
	at org.apache.catalina.core.StandardContext.loadOnStartup(StandardContext.java:4875)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5189)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardContext.reload(StandardContext.java:3752)
	at org.apache.catalina.loader.WebappLoader.backgroundProcess(WebappLoader.java:297)
	at org.apache.catalina.core.StandardContext.backgroundProcess(StandardContext.java:5531)
	at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1381)
	at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1385)
	at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1385)
	at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.run(ContainerBase.java:1353)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.nio.channels.ClosedByInterruptException
	at java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:202)
	at sun.nio.ch.FileChannelImpl.read(FileChannelImpl.java:164)
	at sun.nio.ch.ChannelInputStream.read(ChannelInputStream.java:65)
	at sun.nio.ch.ChannelInputStream.read(ChannelInputStream.java:109)
	at sun.nio.ch.ChannelInputStream.read(ChannelInputStream.java:103)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at org.springframework.asm.ClassReader.readStream(ClassReader.java:315)
	at org.springframework.asm.ClassReader.<init>(ClassReader.java:283)
	at org.springframework.core.type.classreading.SimpleMetadataReader.getClassReader(SimpleMetadataReader.java:58)
	at org.springframework.core.type.classreading.SimpleMetadataReader.<init>(SimpleMetadataReader.java:50)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:103)
	at org.springframework.core.type.classreading.CachingMetadataReaderFactory.getMetadataReader(CachingMetadataReaderFactory.java:123)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:430)
	... 42 more
21-02-16 14:26:23 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:26:24 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:26:33 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 14:26:33 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 14:26:33 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 14:26:34 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 14:26:34 [DEBUG] AfterReturningAspect.loggerAdvice{28} - [log] : 유저 user02 접속
21-02-16 14:26:34 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 14:26:34 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 14:26:36 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:26:36 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:26:44 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateMember()
21-02-16 14:26:44 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.updateMember()
21-02-16 14:26:44 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.updateMember()
21-02-16 14:26:44 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.updateMember()
21-02-16 14:26:44 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.updateMember()
21-02-16 14:26:44 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateMember()
21-02-16 14:28:03 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 14:28:03 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 14:28:03 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 14:28:04 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 14:28:04 [DEBUG] AfterReturningAspect.loggerAdvice{28} - [log] : 유저 user02 접속
21-02-16 14:28:04 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 14:28:04 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 14:28:06 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:28:06 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:28:13 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateMember()
21-02-16 14:28:13 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.updateMember()
21-02-16 14:28:13 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.updateMember()
21-02-16 14:28:13 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.updateMember()
21-02-16 14:28:13 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.updateMember()
21-02-16 14:28:13 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateMember()
21-02-16 14:33:03 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateMember()
21-02-16 14:33:03 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.updateMember()
21-02-16 14:33:03 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.updateMember()
21-02-16 14:33:03 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.updateMember()
21-02-16 14:33:03 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.updateMember()
21-02-16 14:33:03 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateMember()
21-02-16 14:33:14 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.logoutMember()
21-02-16 14:33:14 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.logoutMember()
21-02-16 14:33:21 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 14:33:21 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 14:33:21 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 14:33:21 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 14:33:21 [DEBUG] AfterReturningAspect.loggerAdvice{28} - [log] : 유저 user02 접속
21-02-16 14:33:21 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 14:33:21 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 14:33:22 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:33:22 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:34:17 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:34:17 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:34:23 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updatePwd()
21-02-16 14:34:23 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updatePwd()
21-02-16 14:35:07 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:35:07 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:35:14 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 14:35:14 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 14:35:14 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 14:35:15 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 14:35:15 [DEBUG] AfterReturningAspect.loggerAdvice{28} - [log] : 유저 user02 접속
21-02-16 14:35:15 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 14:35:15 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 14:35:17 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:35:17 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:35:23 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updatePwd()
21-02-16 14:35:23 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updatePwd()
21-02-16 14:35:23 [WARN ] PageNotFound.noHandlerFound{1251} - No mapping for GET /spring/updateForm.me
21-02-16 14:36:38 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:36:39 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:36:50 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:36:50 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:36:56 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 14:36:56 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 14:36:56 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 14:36:57 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 14:36:57 [DEBUG] AfterReturningAspect.loggerAdvice{28} - [log] : 유저 user02 접속
21-02-16 14:36:57 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 14:36:57 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 14:36:59 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:36:59 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:37:04 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updatePwd()
21-02-16 14:37:04 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updatePwd()
21-02-16 14:37:04 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:37:04 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:47:50 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:47:50 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:48:02 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 14:48:02 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 14:48:02 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 14:48:03 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 14:48:03 [DEBUG] AfterReturningAspect.loggerAdvice{28} - [log] : 유저 user02 접속
21-02-16 14:48:03 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 14:48:03 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 14:48:05 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:48:05 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:50:13 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:50:13 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 14:51:03 [WARN ] XmlWebApplicationContext.refresh{558} - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping': Invocation of init method failed; nested exception is java.lang.IllegalStateException: Invalid mapping on handler class [com.kh.spring.member.controller.MemberController]: public java.lang.String com.kh.spring.member.controller.MemberController.updatePwd(java.lang.String,javax.servlet.http.HttpSession)
21-02-16 14:51:03 [ERROR] DispatcherServlet.initServletBean{534} - Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping': Invocation of init method failed; nested exception is java.lang.IllegalStateException: Invalid mapping on handler class [com.kh.spring.member.controller.MemberController]: public java.lang.String com.kh.spring.member.controller.MemberController.updatePwd(java.lang.String,javax.servlet.http.HttpSession)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:702)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:668)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:716)
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:591)
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:530)
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:170)
	at javax.servlet.GenericServlet.init(GenericServlet.java:158)
	at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1144)
	at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1091)
	at org.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:985)
	at org.apache.catalina.core.StandardContext.loadOnStartup(StandardContext.java:4875)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5189)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardContext.reload(StandardContext.java:3752)
	at org.apache.catalina.loader.WebappLoader.backgroundProcess(WebappLoader.java:297)
	at org.apache.catalina.core.StandardContext.backgroundProcess(StandardContext.java:5531)
	at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1381)
	at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1385)
	at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1385)
	at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.run(ContainerBase.java:1353)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.IllegalStateException: Invalid mapping on handler class [com.kh.spring.member.controller.MemberController]: public java.lang.String com.kh.spring.member.controller.MemberController.updatePwd(java.lang.String,javax.servlet.http.HttpSession)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$0(AbstractHandlerMethodMapping.java:280)
	at org.springframework.core.MethodIntrospector.lambda$selectMethods$0(MethodIntrospector.java:74)
	at org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:361)
	at org.springframework.core.MethodIntrospector.selectMethods(MethodIntrospector.java:72)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:273)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.processCandidateBean(AbstractHandlerMethodMapping.java:258)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:217)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:205)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:171)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 30 more
Caused by: java.lang.annotation.AnnotationFormatError: Duplicate annotation for class: interface org.springframework.web.bind.annotation.RequestMapping: @org.springframework.web.bind.annotation.RequestMapping(path=[], headers=[], method=[POST], name=, produces=[], params=[], value=[updatePwd.me], consumes=[])
	at sun.reflect.annotation.AnnotationParser.parseAnnotations2(AnnotationParser.java:125)
	at sun.reflect.annotation.AnnotationParser.parseAnnotations(AnnotationParser.java:72)
	at java.lang.reflect.Executable.declaredAnnotations(Executable.java:599)
	at java.lang.reflect.Executable.declaredAnnotations(Executable.java:597)
	at java.lang.reflect.Executable.getDeclaredAnnotations(Executable.java:588)
	at java.lang.reflect.Method.getDeclaredAnnotations(Method.java:630)
	at org.springframework.core.annotation.AnnotationsScanner.getDeclaredAnnotations(AnnotationsScanner.java:461)
	at org.springframework.core.annotation.AnnotationsScanner.isKnownEmpty(AnnotationsScanner.java:505)
	at org.springframework.core.annotation.TypeMappedAnnotations.from(TypeMappedAnnotations.java:251)
	at org.springframework.core.annotation.MergedAnnotations.from(MergedAnnotations.java:322)
	at org.springframework.core.annotation.AnnotatedElementUtils.findAnnotations(AnnotatedElementUtils.java:764)
	at org.springframework.core.annotation.AnnotatedElementUtils.findMergedAnnotation(AnnotatedElementUtils.java:632)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.createRequestMappingInfo(RequestMappingHandlerMapping.java:264)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.getMappingForMethod(RequestMappingHandlerMapping.java:227)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.getMappingForMethod(RequestMappingHandlerMapping.java:67)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$0(AbstractHandlerMethodMapping.java:276)
	... 40 more
21-02-16 14:51:20 [WARN ] XmlWebApplicationContext.refresh{558} - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping': Invocation of init method failed; nested exception is java.lang.IllegalStateException: Invalid mapping on handler class [com.kh.spring.member.controller.MemberController]: public java.lang.String com.kh.spring.member.controller.MemberController.updatePwd(java.lang.String,javax.servlet.http.HttpSession)
21-02-16 14:51:20 [ERROR] DispatcherServlet.initServletBean{534} - Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping': Invocation of init method failed; nested exception is java.lang.IllegalStateException: Invalid mapping on handler class [com.kh.spring.member.controller.MemberController]: public java.lang.String com.kh.spring.member.controller.MemberController.updatePwd(java.lang.String,javax.servlet.http.HttpSession)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:702)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:668)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:716)
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:591)
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:530)
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:170)
	at javax.servlet.GenericServlet.init(GenericServlet.java:158)
	at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1144)
	at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1091)
	at org.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:985)
	at org.apache.catalina.core.StandardContext.loadOnStartup(StandardContext.java:4875)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5189)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardContext.reload(StandardContext.java:3752)
	at org.apache.catalina.loader.WebappLoader.backgroundProcess(WebappLoader.java:297)
	at org.apache.catalina.core.StandardContext.backgroundProcess(StandardContext.java:5531)
	at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1381)
	at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1385)
	at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1385)
	at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.run(ContainerBase.java:1353)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.IllegalStateException: Invalid mapping on handler class [com.kh.spring.member.controller.MemberController]: public java.lang.String com.kh.spring.member.controller.MemberController.updatePwd(java.lang.String,javax.servlet.http.HttpSession)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$0(AbstractHandlerMethodMapping.java:280)
	at org.springframework.core.MethodIntrospector.lambda$selectMethods$0(MethodIntrospector.java:74)
	at org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:361)
	at org.springframework.core.MethodIntrospector.selectMethods(MethodIntrospector.java:72)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:273)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.processCandidateBean(AbstractHandlerMethodMapping.java:258)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:217)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:205)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:171)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 30 more
Caused by: java.lang.annotation.AnnotationFormatError: Duplicate annotation for class: interface org.springframework.web.bind.annotation.RequestMapping: @org.springframework.web.bind.annotation.RequestMapping(path=[], headers=[], method=[POST], name=, produces=[], params=[], value=[updatePwd.me], consumes=[])
	at sun.reflect.annotation.AnnotationParser.parseAnnotations2(AnnotationParser.java:125)
	at sun.reflect.annotation.AnnotationParser.parseAnnotations(AnnotationParser.java:72)
	at java.lang.reflect.Executable.declaredAnnotations(Executable.java:599)
	at java.lang.reflect.Executable.declaredAnnotations(Executable.java:597)
	at java.lang.reflect.Executable.getDeclaredAnnotations(Executable.java:588)
	at java.lang.reflect.Method.getDeclaredAnnotations(Method.java:630)
	at org.springframework.core.annotation.AnnotationsScanner.getDeclaredAnnotations(AnnotationsScanner.java:461)
	at org.springframework.core.annotation.AnnotationsScanner.isKnownEmpty(AnnotationsScanner.java:505)
	at org.springframework.core.annotation.TypeMappedAnnotations.from(TypeMappedAnnotations.java:251)
	at org.springframework.core.annotation.MergedAnnotations.from(MergedAnnotations.java:322)
	at org.springframework.core.annotation.AnnotatedElementUtils.findAnnotations(AnnotatedElementUtils.java:764)
	at org.springframework.core.annotation.AnnotatedElementUtils.findMergedAnnotation(AnnotatedElementUtils.java:632)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.createRequestMappingInfo(RequestMappingHandlerMapping.java:264)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.getMappingForMethod(RequestMappingHandlerMapping.java:227)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.getMappingForMethod(RequestMappingHandlerMapping.java:67)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$0(AbstractHandlerMethodMapping.java:276)
	... 40 more
21-02-16 14:51:38 [WARN ] XmlWebApplicationContext.refresh{558} - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping': Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'memberController' method 
com.kh.spring.member.controller.MemberController#updatePwd(String, HttpSession)
to {POST /updatePwd.me}: There is already 'memberController' bean method
com.kh.spring.member.controller.MemberController#checkPwd(String) mapped.
21-02-16 14:51:38 [ERROR] DispatcherServlet.initServletBean{534} - Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping': Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'memberController' method 
com.kh.spring.member.controller.MemberController#updatePwd(String, HttpSession)
to {POST /updatePwd.me}: There is already 'memberController' bean method
com.kh.spring.member.controller.MemberController#checkPwd(String) mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:702)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:668)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:716)
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:591)
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:530)
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:170)
	at javax.servlet.GenericServlet.init(GenericServlet.java:158)
	at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1144)
	at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1091)
	at org.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:985)
	at org.apache.catalina.core.StandardContext.loadOnStartup(StandardContext.java:4875)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5189)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardContext.reload(StandardContext.java:3752)
	at org.apache.catalina.loader.WebappLoader.backgroundProcess(WebappLoader.java:297)
	at org.apache.catalina.core.StandardContext.backgroundProcess(StandardContext.java:5531)
	at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1381)
	at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1385)
	at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1385)
	at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.run(ContainerBase.java:1353)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'memberController' method 
com.kh.spring.member.controller.MemberController#updatePwd(String, HttpSession)
to {POST /updatePwd.me}: There is already 'memberController' bean method
com.kh.spring.member.controller.MemberController#checkPwd(String) mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.validateMethodMapping(AbstractHandlerMethodMapping.java:633)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:600)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:318)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:350)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:67)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$1(AbstractHandlerMethodMapping.java:288)
	at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:286)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.processCandidateBean(AbstractHandlerMethodMapping.java:258)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:217)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:205)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:171)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 30 more
21-02-16 14:51:52 [WARN ] XmlWebApplicationContext.refresh{558} - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping': Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'memberController' method 
com.kh.spring.member.controller.MemberController#updatePwd(String, HttpSession)
to {POST /updatePwd.me}: There is already 'memberController' bean method
com.kh.spring.member.controller.MemberController#checkPwd(String) mapped.
21-02-16 14:51:52 [ERROR] DispatcherServlet.initServletBean{534} - Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping': Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'memberController' method 
com.kh.spring.member.controller.MemberController#updatePwd(String, HttpSession)
to {POST /updatePwd.me}: There is already 'memberController' bean method
com.kh.spring.member.controller.MemberController#checkPwd(String) mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:702)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:668)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:716)
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:591)
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:530)
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:170)
	at javax.servlet.GenericServlet.init(GenericServlet.java:158)
	at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1144)
	at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1091)
	at org.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:985)
	at org.apache.catalina.core.StandardContext.loadOnStartup(StandardContext.java:4875)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5189)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1412)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1402)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'memberController' method 
com.kh.spring.member.controller.MemberController#updatePwd(String, HttpSession)
to {POST /updatePwd.me}: There is already 'memberController' bean method
com.kh.spring.member.controller.MemberController#checkPwd(String) mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.validateMethodMapping(AbstractHandlerMethodMapping.java:633)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:600)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:318)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:350)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:67)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$1(AbstractHandlerMethodMapping.java:288)
	at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:286)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.processCandidateBean(AbstractHandlerMethodMapping.java:258)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:217)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:205)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:171)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 28 more
21-02-16 14:52:23 [ERROR] DispatcherServlet.initServletBean{534} - Context initialization failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [C:\SpringWorkspace\.metadata\.plugins\org.eclipse.wst.server.core\tmp0\wtpwebapps\SpringP\WEB-INF\classes\com\kh\spring\common\aop\AfterReturningAspect.class]; nested exception is java.nio.channels.ClosedByInterruptException
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:454)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:316)
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:276)
	at org.springframework.context.annotation.ComponentScanBeanDefinitionParser.parse(ComponentScanBeanDefinitionParser.java:90)
	at org.springframework.beans.factory.xml.NamespaceHandlerSupport.parse(NamespaceHandlerSupport.java:74)
	at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseCustomElement(BeanDefinitionParserDelegate.java:1391)
	at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseCustomElement(BeanDefinitionParserDelegate.java:1371)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.parseBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:179)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.doRegisterBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:149)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:96)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.registerBeanDefinitions(XmlBeanDefinitionReader.java:514)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:394)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:337)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:305)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:188)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:195)
	at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:125)
	at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:94)
	at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:133)
	at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:637)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:522)
	at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:702)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:668)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:716)
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:591)
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:530)
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:170)
	at javax.servlet.GenericServlet.init(GenericServlet.java:158)
	at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1144)
	at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1091)
	at org.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:985)
	at org.apache.catalina.core.StandardContext.loadOnStartup(StandardContext.java:4875)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5189)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardContext.reload(StandardContext.java:3752)
	at org.apache.catalina.loader.WebappLoader.backgroundProcess(WebappLoader.java:297)
	at org.apache.catalina.core.StandardContext.backgroundProcess(StandardContext.java:5531)
	at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1381)
	at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1385)
	at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1385)
	at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.run(ContainerBase.java:1353)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.nio.channels.ClosedByInterruptException
	at java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:202)
	at sun.nio.ch.FileChannelImpl.read(FileChannelImpl.java:164)
	at sun.nio.ch.ChannelInputStream.read(ChannelInputStream.java:65)
	at sun.nio.ch.ChannelInputStream.read(ChannelInputStream.java:109)
	at sun.nio.ch.ChannelInputStream.read(ChannelInputStream.java:103)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at org.springframework.asm.ClassReader.readStream(ClassReader.java:315)
	at org.springframework.asm.ClassReader.<init>(ClassReader.java:283)
	at org.springframework.core.type.classreading.SimpleMetadataReader.getClassReader(SimpleMetadataReader.java:58)
	at org.springframework.core.type.classreading.SimpleMetadataReader.<init>(SimpleMetadataReader.java:50)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:103)
	at org.springframework.core.type.classreading.CachingMetadataReaderFactory.getMetadataReader(CachingMetadataReaderFactory.java:123)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:430)
	... 42 more
21-02-16 14:59:16 [ERROR] DispatcherServlet.initServletBean{534} - Context initialization failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [C:\SpringWorkspace\.metadata\.plugins\org.eclipse.wst.server.core\tmp0\wtpwebapps\SpringP\WEB-INF\classes\com\kh\spring\common\aop\AfterReturningAspect.class]; nested exception is java.nio.channels.ClosedByInterruptException
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:454)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:316)
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:276)
	at org.springframework.context.annotation.ComponentScanBeanDefinitionParser.parse(ComponentScanBeanDefinitionParser.java:90)
	at org.springframework.beans.factory.xml.NamespaceHandlerSupport.parse(NamespaceHandlerSupport.java:74)
	at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseCustomElement(BeanDefinitionParserDelegate.java:1391)
	at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseCustomElement(BeanDefinitionParserDelegate.java:1371)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.parseBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:179)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.doRegisterBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:149)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:96)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.registerBeanDefinitions(XmlBeanDefinitionReader.java:514)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:394)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:337)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:305)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:188)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:195)
	at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:125)
	at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:94)
	at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:133)
	at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:637)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:522)
	at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:702)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:668)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:716)
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:591)
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:530)
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:170)
	at javax.servlet.GenericServlet.init(GenericServlet.java:158)
	at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1144)
	at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1091)
	at org.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:985)
	at org.apache.catalina.core.StandardContext.loadOnStartup(StandardContext.java:4875)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5189)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardContext.reload(StandardContext.java:3752)
	at org.apache.catalina.loader.WebappLoader.backgroundProcess(WebappLoader.java:297)
	at org.apache.catalina.core.StandardContext.backgroundProcess(StandardContext.java:5531)
	at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1381)
	at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1385)
	at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1385)
	at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.run(ContainerBase.java:1353)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.nio.channels.ClosedByInterruptException
	at java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:202)
	at sun.nio.ch.FileChannelImpl.read(FileChannelImpl.java:164)
	at sun.nio.ch.ChannelInputStream.read(ChannelInputStream.java:65)
	at sun.nio.ch.ChannelInputStream.read(ChannelInputStream.java:109)
	at sun.nio.ch.ChannelInputStream.read(ChannelInputStream.java:103)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at org.springframework.asm.ClassReader.readStream(ClassReader.java:315)
	at org.springframework.asm.ClassReader.<init>(ClassReader.java:283)
	at org.springframework.core.type.classreading.SimpleMetadataReader.getClassReader(SimpleMetadataReader.java:58)
	at org.springframework.core.type.classreading.SimpleMetadataReader.<init>(SimpleMetadataReader.java:50)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:103)
	at org.springframework.core.type.classreading.CachingMetadataReaderFactory.getMetadataReader(CachingMetadataReaderFactory.java:123)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:430)
	... 42 more
21-02-16 15:00:37 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 15:00:37 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 15:00:44 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 15:00:44 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 15:00:44 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 15:00:45 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 15:00:45 [DEBUG] AfterReturningAspect.loggerAdvice{28} - [log] : 유저 user02 접속
21-02-16 15:00:45 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 15:00:45 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 15:00:47 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 15:00:47 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 15:01:05 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 15:01:05 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 15:01:12 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updatePwd()
21-02-16 15:01:12 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updatePwd()
21-02-16 15:01:12 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 15:01:12 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 15:08:51 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 15:08:51 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 15:08:57 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 15:08:57 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 15:08:57 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 15:08:58 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 15:08:58 [DEBUG] AfterReturningAspect.loggerAdvice{28} - [log] : 유저 user02 접속
21-02-16 15:08:58 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 15:08:58 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 15:08:59 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 15:08:59 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 15:09:05 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updatePwd()
21-02-16 15:09:05 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updatePwd()
21-02-16 15:09:05 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 15:09:05 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 15:09:52 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 15:09:52 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 15:09:59 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 15:09:59 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 15:09:59 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 15:10:00 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 15:10:01 [DEBUG] AfterReturningAspect.loggerAdvice{28} - [log] : 유저 user02 접속
21-02-16 15:10:01 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 15:10:01 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 15:10:04 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 15:10:04 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 15:10:10 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updatePwd()
21-02-16 15:10:10 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updatePwd()
21-02-16 15:10:10 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 15:10:10 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:03:59 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:03:59 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:04:34 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:04:34 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:04:36 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 19:04:36 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 19:07:04 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 19:07:04 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 19:09:13 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 19:09:13 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 19:11:11 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 19:11:11 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 19:11:13 [WARN ] DefaultHandlerExceptionResolver.logException{199} - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required String parameter 'inputPwd' is not present]
21-02-16 19:11:15 [WARN ] DefaultHandlerExceptionResolver.logException{199} - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required String parameter 'inputPwd' is not present]
21-02-16 19:13:07 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 19:13:07 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 19:13:11 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 19:13:11 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 19:13:22 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 19:13:22 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 19:13:22 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 19:13:23 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 19:13:23 [DEBUG] AfterReturningAspect.loggerAdvice{28} - [log] : 유저 user02 접속
21-02-16 19:13:23 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 19:13:23 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 19:13:26 [WARN ] PageNotFound.noHandlerFound{1251} - No mapping for GET /spring/list.bo
21-02-16 19:13:32 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:13:32 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:13:37 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 19:13:37 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 19:13:37 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 19:13:38 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 19:14:39 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:14:39 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:14:41 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 19:14:41 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 19:15:26 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 19:15:26 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 19:15:26 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 19:15:26 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 19:15:26 [DEBUG] AfterReturningAspect.loggerAdvice{28} - [log] : 유저 user02 접속
21-02-16 19:15:26 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 19:15:26 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 19:15:28 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:15:28 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:15:38 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 19:15:39 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 19:15:41 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 19:15:41 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 19:17:00 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:17:00 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:17:15 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:17:15 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:18:55 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:18:55 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:18:58 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 19:18:59 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 19:19:27 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:19:27 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:19:30 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 19:19:30 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 19:32:50 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:32:50 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:34:06 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:34:06 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:34:11 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:34:11 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:34:11 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:34:11 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:34:18 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:34:18 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:34:33 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:34:33 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:34:41 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:34:41 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:34:59 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:34:59 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:36:44 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:36:44 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:37:05 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:37:05 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:37:22 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:37:22 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:37:23 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:37:23 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:38:55 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:38:55 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:39:07 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:39:07 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:40:49 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:40:49 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:40:51 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 19:40:51 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 19:41:21 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:41:21 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:41:23 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 19:41:23 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 19:42:12 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:42:12 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:42:14 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 19:42:14 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 19:42:17 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 19:42:17 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 19:45:12 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:45:12 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:45:25 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:45:25 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:45:32 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:45:32 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:45:33 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:45:33 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:45:35 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 19:45:35 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 19:47:46 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:47:46 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:47:49 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 19:47:49 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 19:49:52 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:49:52 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:50:05 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 19:50:05 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 19:50:05 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 19:50:05 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 19:50:05 [DEBUG] AfterReturningAspect.loggerAdvice{28} - [log] : 유저 user02 접속
21-02-16 19:50:05 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 19:50:05 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 19:50:07 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:50:07 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:50:14 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 19:50:14 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 19:50:42 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:50:42 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:50:47 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 19:50:47 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 19:52:38 [ERROR] DispatcherServlet.initServletBean{534} - Context initialization failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [C:\SpringWorkspace\.metadata\.plugins\org.eclipse.wst.server.core\tmp0\wtpwebapps\SpringP\WEB-INF\classes\com\kh\spring\common\aop\AfterReturningAspect.class]; nested exception is java.nio.channels.ClosedByInterruptException
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:454)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:316)
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:276)
	at org.springframework.context.annotation.ComponentScanBeanDefinitionParser.parse(ComponentScanBeanDefinitionParser.java:90)
	at org.springframework.beans.factory.xml.NamespaceHandlerSupport.parse(NamespaceHandlerSupport.java:74)
	at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseCustomElement(BeanDefinitionParserDelegate.java:1391)
	at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseCustomElement(BeanDefinitionParserDelegate.java:1371)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.parseBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:179)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.doRegisterBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:149)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:96)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.registerBeanDefinitions(XmlBeanDefinitionReader.java:514)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:394)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:337)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:305)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:188)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:195)
	at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:125)
	at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:94)
	at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:133)
	at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:637)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:522)
	at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:702)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:668)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:716)
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:591)
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:530)
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:170)
	at javax.servlet.GenericServlet.init(GenericServlet.java:158)
	at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1144)
	at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1091)
	at org.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:985)
	at org.apache.catalina.core.StandardContext.loadOnStartup(StandardContext.java:4875)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5189)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardContext.reload(StandardContext.java:3752)
	at org.apache.catalina.loader.WebappLoader.backgroundProcess(WebappLoader.java:297)
	at org.apache.catalina.core.StandardContext.backgroundProcess(StandardContext.java:5531)
	at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1381)
	at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1385)
	at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1385)
	at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.run(ContainerBase.java:1353)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.nio.channels.ClosedByInterruptException
	at java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:202)
	at sun.nio.ch.FileChannelImpl.read(FileChannelImpl.java:164)
	at sun.nio.ch.ChannelInputStream.read(ChannelInputStream.java:65)
	at sun.nio.ch.ChannelInputStream.read(ChannelInputStream.java:109)
	at sun.nio.ch.ChannelInputStream.read(ChannelInputStream.java:103)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at org.springframework.asm.ClassReader.readStream(ClassReader.java:315)
	at org.springframework.asm.ClassReader.<init>(ClassReader.java:283)
	at org.springframework.core.type.classreading.SimpleMetadataReader.getClassReader(SimpleMetadataReader.java:58)
	at org.springframework.core.type.classreading.SimpleMetadataReader.<init>(SimpleMetadataReader.java:50)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:103)
	at org.springframework.core.type.classreading.CachingMetadataReaderFactory.getMetadataReader(CachingMetadataReaderFactory.java:123)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:430)
	... 42 more
21-02-16 19:52:46 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:52:46 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:52:54 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 19:52:54 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 19:52:54 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 19:52:54 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 19:52:54 [DEBUG] AfterReturningAspect.loggerAdvice{28} - [log] : 유저 user02 접속
21-02-16 19:52:54 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 19:52:54 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 19:52:57 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:52:57 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:53:02 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 19:53:02 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 19:53:24 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 19:53:24 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 19:53:26 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 19:53:26 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 19:53:28 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:53:28 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 19:53:31 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 19:53:31 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:00:46 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:00:46 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:01:06 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 20:01:06 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 20:01:06 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 20:01:07 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 20:01:07 [DEBUG] AfterReturningAspect.loggerAdvice{28} - [log] : 유저 user02 접속
21-02-16 20:01:07 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 20:01:07 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 20:01:13 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:01:13 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:01:19 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:01:19 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:04:41 [ERROR] DispatcherServlet.initServletBean{534} - Context initialization failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [C:\SpringWorkspace\.metadata\.plugins\org.eclipse.wst.server.core\tmp0\wtpwebapps\SpringP\WEB-INF\classes\com\kh\spring\common\aop\AfterReturningAspect.class]; nested exception is java.nio.channels.ClosedByInterruptException
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:454)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:316)
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:276)
	at org.springframework.context.annotation.ComponentScanBeanDefinitionParser.parse(ComponentScanBeanDefinitionParser.java:90)
	at org.springframework.beans.factory.xml.NamespaceHandlerSupport.parse(NamespaceHandlerSupport.java:74)
	at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseCustomElement(BeanDefinitionParserDelegate.java:1391)
	at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseCustomElement(BeanDefinitionParserDelegate.java:1371)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.parseBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:179)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.doRegisterBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:149)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:96)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.registerBeanDefinitions(XmlBeanDefinitionReader.java:514)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:394)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:337)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:305)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:188)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:195)
	at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:125)
	at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:94)
	at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:133)
	at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:637)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:522)
	at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:702)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:668)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:716)
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:591)
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:530)
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:170)
	at javax.servlet.GenericServlet.init(GenericServlet.java:158)
	at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1144)
	at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1091)
	at org.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:985)
	at org.apache.catalina.core.StandardContext.loadOnStartup(StandardContext.java:4875)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5189)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardContext.reload(StandardContext.java:3752)
	at org.apache.catalina.loader.WebappLoader.backgroundProcess(WebappLoader.java:297)
	at org.apache.catalina.core.StandardContext.backgroundProcess(StandardContext.java:5531)
	at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1381)
	at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1385)
	at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1385)
	at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.run(ContainerBase.java:1353)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.nio.channels.ClosedByInterruptException
	at java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:202)
	at sun.nio.ch.FileChannelImpl.read(FileChannelImpl.java:164)
	at sun.nio.ch.ChannelInputStream.read(ChannelInputStream.java:65)
	at sun.nio.ch.ChannelInputStream.read(ChannelInputStream.java:109)
	at sun.nio.ch.ChannelInputStream.read(ChannelInputStream.java:103)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at org.springframework.asm.ClassReader.readStream(ClassReader.java:315)
	at org.springframework.asm.ClassReader.<init>(ClassReader.java:283)
	at org.springframework.core.type.classreading.SimpleMetadataReader.getClassReader(SimpleMetadataReader.java:58)
	at org.springframework.core.type.classreading.SimpleMetadataReader.<init>(SimpleMetadataReader.java:50)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:103)
	at org.springframework.core.type.classreading.CachingMetadataReaderFactory.getMetadataReader(CachingMetadataReaderFactory.java:123)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:430)
	... 42 more
21-02-16 20:04:53 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:04:53 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:05:02 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 20:05:02 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 20:05:02 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 20:05:03 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 20:05:03 [DEBUG] AfterReturningAspect.loggerAdvice{28} - [log] : 유저 user02 접속
21-02-16 20:05:03 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 20:05:03 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 20:05:05 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:05:05 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:05:10 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:05:10 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:05:12 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:05:12 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:05:19 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:05:19 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:05:59 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:05:59 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:06:03 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:06:03 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:06:06 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:06:06 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:06:35 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:06:35 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:06:44 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateMember()
21-02-16 20:06:44 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.updateMember()
21-02-16 20:06:44 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.updateMember()
21-02-16 20:06:44 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.updateMember()
21-02-16 20:06:44 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.updateMember()
21-02-16 20:06:44 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateMember()
21-02-16 20:19:35 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateMember()
21-02-16 20:19:35 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.updateMember()
21-02-16 20:19:35 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.updateMember()
21-02-16 20:19:35 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.updateMember()
21-02-16 20:19:35 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.updateMember()
21-02-16 20:19:35 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateMember()
21-02-16 20:19:40 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:19:40 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:20:31 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateMember()
21-02-16 20:20:31 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.updateMember()
21-02-16 20:20:31 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.updateMember()
21-02-16 20:20:31 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.updateMember()
21-02-16 20:20:31 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.updateMember()
21-02-16 20:20:31 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateMember()
21-02-16 20:20:37 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:20:37 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:22:43 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:22:43 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:23:20 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateMember()
21-02-16 20:23:20 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.updateMember()
21-02-16 20:23:20 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.updateMember()
21-02-16 20:23:20 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.updateMember()
21-02-16 20:23:20 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.updateMember()
21-02-16 20:23:20 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateMember()
21-02-16 20:24:19 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateMember()
21-02-16 20:24:19 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.updateMember()
21-02-16 20:24:19 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.updateMember()
21-02-16 20:24:19 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.updateMember()
21-02-16 20:24:19 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.updateMember()
21-02-16 20:24:19 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateMember()
21-02-16 20:24:22 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:24:23 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:24:25 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:24:25 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:25:03 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateMember()
21-02-16 20:25:03 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.updateMember()
21-02-16 20:25:03 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.updateMember()
21-02-16 20:25:03 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.updateMember()
21-02-16 20:25:03 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.updateMember()
21-02-16 20:25:03 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateMember()
21-02-16 20:25:07 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:25:07 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:25:10 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:25:10 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:27:23 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateMember()
21-02-16 20:27:23 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.updateMember()
21-02-16 20:27:23 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.updateMember()
21-02-16 20:27:23 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.updateMember()
21-02-16 20:27:23 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.updateMember()
21-02-16 20:27:23 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateMember()
21-02-16 20:27:28 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:27:28 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updatePwd()
21-02-16 20:27:28 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:27:28 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updatePwd()
21-02-16 20:27:28 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:27:28 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:27:39 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:27:39 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updatePwd()
21-02-16 20:27:39 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:27:39 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updatePwd()
21-02-16 20:27:39 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:27:39 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:28:16 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:28:16 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:28:18 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:28:18 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:28:34 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:28:34 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:29:11 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:29:11 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:29:14 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:29:14 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:29:18 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:29:18 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:29:19 [WARN ] DefaultHandlerExceptionResolver.logException{199} - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required String parameter 'newPwd' is not present]
21-02-16 20:29:23 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:29:23 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:30:45 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:30:45 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:30:49 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:30:49 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:30:57 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:30:57 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:31:03 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:31:03 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:31:19 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:31:19 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:31:20 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:31:20 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:31:37 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:31:37 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:31:40 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:31:41 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:32:01 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:32:01 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:32:47 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:32:47 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:33:53 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 20:33:53 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 20:33:53 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 20:33:54 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 20:33:54 [DEBUG] AfterReturningAspect.loggerAdvice{28} - [log] : 유저 user02 접속
21-02-16 20:33:54 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 20:33:54 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 20:33:56 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:33:56 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:34:26 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:34:26 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:37:28 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:37:28 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:37:32 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:37:32 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:37:48 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:37:48 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:37:52 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:37:52 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:37:58 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:37:58 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:38:07 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:38:07 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:38:08 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:38:08 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:38:11 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:38:11 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:38:23 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:38:23 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:38:27 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:38:27 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:39:19 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.logoutMember()
21-02-16 20:39:19 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.logoutMember()
21-02-16 20:39:26 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 20:39:26 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 20:39:26 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 20:39:27 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 20:39:27 [DEBUG] AfterReturningAspect.loggerAdvice{28} - [log] : 유저 user02 접속
21-02-16 20:39:27 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 20:39:27 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 20:39:29 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:39:29 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:39:33 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:39:33 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:39:52 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updatePwd()
21-02-16 20:39:52 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updatePwd()
21-02-16 20:39:52 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:39:52 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:40:01 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:40:01 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:40:09 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:40:09 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:40:14 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:40:14 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:40:19 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:40:19 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:41:17 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:41:17 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:41:54 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:41:54 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:42:01 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:42:01 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:42:07 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:42:07 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:42:14 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:42:14 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:42:19 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:42:19 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:44:19 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:44:19 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:45:17 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:45:17 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:46:42 [WARN ] DefaultHandlerExceptionResolver.logException{199} - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required String parameter 'newPwd' is not present]
21-02-16 20:46:43 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:46:43 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:47:22 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:47:22 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:47:49 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:47:49 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:47:54 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:47:54 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:53:51 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:53:51 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:53:55 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:53:55 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:54:27 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:54:27 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:54:32 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:54:32 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:54:35 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:54:35 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:54:47 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:54:47 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:54:51 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:54:51 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:54:55 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:54:55 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 20:54:57 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updatePwd()
21-02-16 20:54:57 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updatePwd()
21-02-16 20:54:57 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 20:54:57 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 21:04:39 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 21:04:39 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 21:04:49 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 21:04:49 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 21:04:49 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 21:04:50 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 21:04:50 [DEBUG] AfterReturningAspect.loggerAdvice{28} - [log] : 유저 user02 접속
21-02-16 21:04:50 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 21:04:50 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 21:04:54 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 21:04:54 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 21:05:00 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 21:05:00 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 21:05:06 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updatePwd()
21-02-16 21:05:07 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updatePwd()
21-02-16 21:05:07 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 21:05:07 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 21:06:08 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 21:06:08 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 21:06:12 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 21:06:12 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 21:06:18 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updatePwd()
21-02-16 21:06:18 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updatePwd()
21-02-16 21:06:18 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 21:06:18 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 21:06:28 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 21:06:28 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 21:06:32 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 21:06:32 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 21:06:48 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 21:06:48 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 21:06:53 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 21:06:53 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 21:07:23 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 21:07:23 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 21:07:29 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 21:07:30 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 21:08:30 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 21:08:30 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 21:08:35 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 21:08:35 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 21:08:43 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 21:08:43 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 21:08:47 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 21:08:47 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 21:09:10 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 21:09:10 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 21:09:14 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 21:09:14 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 21:09:35 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 21:09:35 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 21:09:41 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 21:09:42 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 21:09:47 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updatePwd()
21-02-16 21:09:47 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updatePwd()
21-02-16 21:09:47 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 21:09:47 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 21:22:08 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 21:22:39 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 21:22:39 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 21:23:11 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 21:23:11 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 21:23:20 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 21:23:20 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 21:23:20 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 21:23:21 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 21:23:21 [DEBUG] AfterReturningAspect.loggerAdvice{28} - [log] : 유저 user02 접속
21-02-16 21:23:21 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 21:23:21 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 21:23:43 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 21:23:43 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 21:23:43 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 21:23:44 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 21:23:44 [DEBUG] AfterReturningAspect.loggerAdvice{28} - [log] : 유저 user02 접속
21-02-16 21:23:44 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 21:23:44 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 21:23:46 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 21:23:46 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 21:23:53 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 21:23:53 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 21:24:00 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 21:24:00 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 21:24:04 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updatePwd()
21-02-16 21:24:04 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.updatePassword()
21-02-16 21:24:04 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.updatePassword()
21-02-16 21:24:04 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.updatePassword()
21-02-16 21:24:04 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.updatePassword()
21-02-16 21:24:04 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updatePwd()
21-02-16 21:24:04 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 21:24:04 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 21:24:08 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateMember()
21-02-16 21:24:08 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.updateMember()
21-02-16 21:24:08 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.updateMember()
21-02-16 21:24:08 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.updateMember()
21-02-16 21:24:08 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.updateMember()
21-02-16 21:24:08 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateMember()
21-02-16 21:24:12 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.logoutMember()
21-02-16 21:24:12 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.logoutMember()
21-02-16 21:24:18 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 21:24:18 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 21:24:18 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 21:24:18 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 21:24:18 [DEBUG] AfterReturningAspect.loggerAdvice{28} - [log] : 유저 user02 접속
21-02-16 21:24:18 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 21:24:18 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 21:24:20 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 21:24:20 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 21:24:24 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 21:24:24 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 21:24:28 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updatePwd()
21-02-16 21:24:28 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.updatePassword()
21-02-16 21:24:28 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.updatePassword()
21-02-16 21:24:28 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.updatePassword()
21-02-16 21:24:28 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.updatePassword()
21-02-16 21:24:28 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updatePwd()
21-02-16 21:24:28 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 21:24:28 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 21:24:31 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.logoutMember()
21-02-16 21:24:31 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.logoutMember()
21-02-16 21:24:38 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 21:24:38 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 21:24:38 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 21:24:38 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 21:24:38 [DEBUG] AfterReturningAspect.loggerAdvice{28} - [log] : 유저 user02 접속
21-02-16 21:24:38 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 21:24:38 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 21:24:46 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 21:24:46 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 21:25:18 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 21:25:18 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 21:25:20 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.logoutMember()
21-02-16 21:25:20 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.logoutMember()
21-02-16 21:25:31 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 21:25:32 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 21:25:32 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 21:25:32 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 21:25:32 [DEBUG] AfterReturningAspect.loggerAdvice{28} - [log] : 유저 user02 접속
21-02-16 21:25:32 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 21:25:32 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 21:25:34 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 21:25:34 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 21:25:38 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateMember()
21-02-16 21:25:38 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.updateMember()
21-02-16 21:25:38 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.updateMember()
21-02-16 21:25:38 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.updateMember()
21-02-16 21:25:38 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.updateMember()
21-02-16 21:25:38 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateMember()
21-02-16 21:25:44 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateMember()
21-02-16 21:25:44 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.updateMember()
21-02-16 21:25:44 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.updateMember()
21-02-16 21:25:44 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.updateMember()
21-02-16 21:25:44 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.updateMember()
21-02-16 21:25:44 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateMember()
21-02-16 21:25:46 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateMember()
21-02-16 21:25:46 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.updateMember()
21-02-16 21:25:46 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.updateMember()
21-02-16 21:25:46 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.updateMember()
21-02-16 21:25:46 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.updateMember()
21-02-16 21:25:46 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateMember()
21-02-16 21:35:39 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 21:35:47 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateMember()
21-02-16 21:35:47 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.updateMember()
21-02-16 21:35:47 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.updateMember()
21-02-16 21:35:48 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.updateMember()
21-02-16 21:35:48 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.updateMember()
21-02-16 21:35:48 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateMember()
21-02-16 21:35:50 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateMember()
21-02-16 21:35:50 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.updateMember()
21-02-16 21:35:50 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.updateMember()
21-02-16 21:35:50 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.updateMember()
21-02-16 21:35:50 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.updateMember()
21-02-16 21:35:50 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateMember()
21-02-16 21:35:56 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 21:35:56 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 21:36:04 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 21:36:04 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.checkPwd()
21-02-16 21:36:19 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updatePassword()
21-02-16 21:36:19 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.updatePassword()
21-02-16 21:36:19 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.updatePassword()
21-02-16 21:36:19 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.updatePassword()
21-02-16 21:36:19 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.updatePassword()
21-02-16 21:36:19 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updatePassword()
21-02-16 21:36:19 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 21:36:19 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.updateForm()
21-02-16 21:36:27 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.logoutMember()
21-02-16 21:36:27 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.logoutMember()
21-02-16 21:36:32 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Controller : com.kh.spring.member.controller.MemberController.loginMember()
21-02-16 21:36:32 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 21:36:32 [INFO ] LoggerAspect1.loggerAdvice{28} - [Before]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 21:36:32 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Dao : com.kh.spring.member.model.dao.MemberDao.loginUser()
21-02-16 21:36:32 [DEBUG] AfterReturningAspect.loggerAdvice{28} - [log] : 유저 user02 접속
21-02-16 21:36:32 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]ServiceImpl : com.kh.spring.member.model.service.MemberService.loginMember()
21-02-16 21:36:32 [INFO ] LoggerAspect1.loggerAdvice{30} - [After]Controller : com.kh.spring.member.controller.MemberController.loginMember()
