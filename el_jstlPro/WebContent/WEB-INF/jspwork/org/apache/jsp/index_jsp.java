/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.60
 * Generated at: 2021-01-28 00:15:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1611620206037L));
    _jspx_dependants.put("jar:file:/C:/BackendWorkspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/el_jstlPro/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/views/common/menubar.jsp", Long.valueOf(1611724104515L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fremove_0026_005fvar_005fscope_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fremove_0026_005fvar_005fscope_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fremove_0026_005fvar_005fscope_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<!-- Latest compiled and minified CSS -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\">\r\n");
      out.write("\r\n");
      out.write("<!-- jQuery library -->\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<!-- Latest compiled JavaScript -->\r\n");
      out.write("<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script> \r\n");
      out.write("<style>\r\n");
      out.write("    div{box-sizing: border-box;}\r\n");
      out.write("    #header{\r\n");
      out.write("        width:80%;\r\n");
      out.write("        height:100px;\r\n");
      out.write("        padding-top: 20px;\r\n");
      out.write("        margin:auto;\r\n");
      out.write("    }\r\n");
      out.write("    #header>div{width:100%; margin-bottom:10px}\r\n");
      out.write("    #header_1{height:40%;}\r\n");
      out.write("    #header_2{height:60%;}\r\n");
      out.write("\r\n");
      out.write("    #header_1>div{\r\n");
      out.write("        height:100%;\r\n");
      out.write("        float:left;\r\n");
      out.write("    }\r\n");
      out.write("    #header_1_left{width:30%;position:relative;}\r\n");
      out.write("    #header_1_center{width:20%;}\r\n");
      out.write("    #header_1_right{width:40%;}\r\n");
      out.write("\r\n");
      out.write("    #header_1_left>img{height:80%;position:absolute;margin:auto;top:0;bottom:0;right: 0;left:0;}\r\n");
      out.write("    #header_1_right{text-align: center; line-height:35px; font-size: 12px; text-indent: 35px;}\r\n");
      out.write("    #header_1_right>a{margin: 5px;}\r\n");
      out.write("    #header_1_right>a:hover{cursor: pointer;}\r\n");
      out.write("    \r\n");
      out.write("    #header_2>ul{width:100%; height:100%; list-style-type: none; margin: auto; padding:0;}\r\n");
      out.write("    #header_2>ul>li{float:left; width:25%; height:100%; line-height: 55px; text-align:center;}\r\n");
      out.write("    #header_2>ul>li a{text-decoration: none; color:black; font-size: 18px; font-weight: 900;}\r\n");
      out.write("\r\n");
      out.write("    #header_2{border-top:1px solid lightgray}\r\n");
      out.write("\r\n");
      out.write("    #header a{text-decoration:none; color:black}\r\n");
      out.write("    \r\n");
      out.write("    /* 세부 페이지마다 공통적으로 유지할 style */\r\n");
      out.write("    .content{\r\n");
      out.write("        background-color:rgb(247, 245, 245);\r\n");
      out.write("        width:80%;\r\n");
      out.write("        margin:auto;\r\n");
      out.write("    }\r\n");
      out.write("    .innerOuter{\r\n");
      out.write("        border:1px solid lightgray;\r\n");
      out.write("        width:80%;\r\n");
      out.write("        margin:auto;\r\n");
      out.write("        padding:5% 10%;\r\n");
      out.write("        background:white;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t<div id=\"header\">\r\n");
      out.write("        <div id=\"header_1\">\r\n");
      out.write("            <div id=\"header_1_left\">\r\n");
      out.write("                <img src=\"https://www.iei.or.kr/resources/images/common/top_logo_s.jpg\" alt=\"\" onclick=\"location.href='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ pageContext.servletContext.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\">\r\n");
      out.write("            </div>\r\n");
      out.write("            <div id=\"header_1_center\"></div>\r\n");
      out.write("            <div id=\"header_1_right\">\r\n");
      out.write("            \r\n");
      out.write("            \t<!-- 기존과 동일 하게 작업!! 이제는 바로 로그인유저가 있는 경우 없는 경우 동시에 작업하자!! -->\r\n");
      out.write("                <!-- 로그인 전 -->\r\n");
      out.write("                ");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                \r\n");
      out.write("                <!-- 로그인 후  -->\r\n");
      out.write("                ");
      if (_jspx_meth_c_005fif_005f2(_jspx_page_context))
        return;
      out.write("  \r\n");
      out.write("                \r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div id=\"header_2\">\r\n");
      out.write("            <ul>\r\n");
      out.write("                <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.servletContext.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">HOME</a></li>\r\n");
      out.write("                <li><a href=\"\">공지사항</a></li>\r\n");
      out.write("                <li><a href=\"list.bo\">자유게시판</a></li>\r\n");
      out.write("            </ul>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div> \r\n");
      out.write("\t<!-- Modal -->\r\n");
      out.write("\t<!-- 로그인 버튼 누르면 나올 팝업의 기능 -->\r\n");
      out.write("\t<div class=\"modal\" id=\"loginModal\">\r\n");
      out.write("\t<!-- sm : responsiveness to device -->\r\n");
      out.write("\t\t<div class=\"modal-dialog modal-sm\">\r\n");
      out.write("\t    \t<div class=\"modal-content\">\r\n");
      out.write("\t        \t<div class=\"modal-header\">\r\n");
      out.write("\t            \t<h4 class=\"modal-title\">로그인</h4> <!-- 팝업창 헤더 -->\r\n");
      out.write("\t            </div>\r\n");
      out.write("\t            <form id=\"loginForm\" method=\"POST\"> <!-- 팝업창 바디에 들어갈 로그인 폼 -->\r\n");
      out.write("\t            \t<div class=\"modal-body\">\r\n");
      out.write("\t\t\t\t\t\t<label for=\"loginId\" class=\"mr-sm-2\">아이디 : </label>\r\n");
      out.write("\t\t\t\t\t\t<!-- form-control : full width form으로 크기 지정 -->\r\n");
      out.write("\t\t\t\t\t\t<!-- mb2 : 위아래 간격 -->\r\n");
      out.write("\t\t\t\t\t\t<!-- mr-sm-2 : 왼쪽 간격 -->\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" class=\"form-control mb-2 mr-sm-2\" id=\"loginId\" placeholder=\"아이디를 입력하세요\" name=\"loginId\" required>\r\n");
      out.write("\t\t\t\t\t\t<label for=\"loginPwd\" class=\"mr-sm-2\">비밀번호 : </label>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"password\" class=\"form-control mb-2 mr-sm-2\" id=\"loginPwd\" placeholder=\"비밀번호를 입력하세요\" name=\"loginPwd\" required>\r\n");
      out.write("\t\t            </div>\r\n");
      out.write("\t\t                \t\t\t\t\r\n");
      out.write("\t\t            <div class=\"modal-footer\">\r\n");
      out.write("\t\t            \t<!-- btn-primary : 파란버튼 -->\r\n");
      out.write("\t\t            \t<!-- btn-danger : 빨간버튼 /경고 -->\r\n");
      out.write("\t\t\t            <button type=\"submit\" class=\"btn btn-primary\" onclick=\"loginPopUp();\">로그인</button> <!-- 로그인 submit 버튼 -->\r\n");
      out.write("\t\t                <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">취소</button> <!-- 취소 버튼 누르면 그냥 닫기처리 -->                \t\t\t\t\r\n");
      out.write("\t\t            </div>\r\n");
      out.write("\t\t                \t\t\t\t\r\n");
      out.write("\t\t        </form>\r\n");
      out.write("\t\t    \t<script>\r\n");
      out.write("\t\t        //일단 임시로 submit 버튼 클릭시 alert창이 나타나도록 처리하였음\r\n");
      out.write("\t\t        \tfunction loginPopUp(){\r\n");
      out.write("\t\t                alert(\"대충 로그인 되었다고 보여주는 팝업 메시지~!\");\r\n");
      out.write("\t\t            }\r\n");
      out.write("\t\t        </script>\r\n");
      out.write("\t\t           </div>\r\n");
      out.write("\t\t      </div>\t                \r\n");
      out.write("\t\t </div>\t        \t\t\t\t\t\t\t\t\t\t\t   \t\t\t\t\r\n");
      out.write("\t\t                \t\t\t\t                \r\n");
      out.write("    <br clear=\"both\">\r\n");
      out.write("<!-- \r\n");
      out.write("모달 팝업- 창이 종료되기 전에 다른 작업못하는것 (메세지박스), 모달리스 - 제어권을 독점하지 않아 다른 작업을 할수있다.(찾기상자)\r\n");
      out.write("웹사이트 본문에서 별도의 윈도우가 필요한 경우에 띄우는 팝업 윈도우 같은 것\r\n");
      out.write("data- target의 value : 버튼 클릭 시 모달로 띄우고자 하는 id값을 #을 붙여서 연결\r\n");
      out.write("data- toggle의 value : 모달기능을 수행하겠다는 의미\r\n");
      out.write("모달창 영역에 버튼태그의 data : dismiss 속성을 적용하면 모달을 닫게 하는 기능을 적용한다는 의미\r\n");
      out.write("data- dismiss=\"modal\" : 모달을 닫는 기능을 갖고 있다.\r\n");
      out.write("\r\n");
      out.write("--------------------------------------------------------------------------------\r\n");
      out.write("\r\n");
      out.write("- m : Margin을 의미\r\n");
      out.write("- p : Padding을 의미\r\n");
      out.write("\r\n");
      out.write("- t : top을 의미 \r\n");
      out.write("- b : bottom을 의미\r\n");
      out.write("- l : left을 의미\r\n");
      out.write("- r : right을 의미\r\n");
      out.write("- x : x축 -> left , right을 의미  (mx : 양쪽옆마진)\r\n");
      out.write("- y : y축 -> top , bottom을 의미  (my : 위아래마진)\r\n");
      out.write("\r\n");
      out.write("- xs : extra small\r\n");
      out.write("- sm : small\r\n");
      out.write("- md : medium\r\n");
      out.write("- lg : large\r\n");
      out.write("- xl : extra large\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(".form-control\r\n");
      out.write(" – 부트스트랩에서 값을 입력받는 input, textarea, select는 모두 .form-control 클래스 선택자를 적용한다. \r\n");
      out.write("   그러면 모든 input, textarea 등 width:100%, height:34px, padding 상하:6px, 좌우:12px, border-radius:4px이 적용된다.\r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write(" .form-group\r\n");
      out.write(" – 입력받는 부분은 일반적으로 label, input으로 구성되는데 이 부분에 .form-group 클래스 선택자를 적용한다. \r\n");
      out.write("   그러면 하단 15px의 마진값을 설정하여 공간적인 여백이 생기게 된다\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write(" -->\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\t<h1 align=\"center\">JSP ActionTag</h1>\r\n");
      out.write("\t<h3><a href=\"views/jspActionTag/testAction.jsp\">JSP Action Tag 테스트</a></h3>\r\n");
      out.write("\t<br>\r\n");
      out.write("\t<hr>\r\n");
      out.write("\t<h1 align=\"center\">EL(Expression Language)</h1>\r\n");
      out.write("\t<h3><a href=\"test1\">request.getAttribute() 테스트</a></h3>\r\n");
      out.write("\t<h3><a href=\"test2\">request에 저장된 vo 객체 출력 테스트</a></h3>\r\n");
      out.write("\t\r\n");
      out.write("\t<h3><a href=\"views/el/testEL3.jsp?name=galaxy&price=95&no=5&no=6&option=삼성\">JSP Action Tag 테스트</a></h3>\r\n");
      out.write("\t<h3><a href=\"test4\">requestScope와 sessionScope 테스트</a></h3>\r\n");
      out.write("\t<hr>\r\n");
      out.write("\t<h1 align=\"center\">JSTL 테스트</h1>\r\n");
      out.write("\t<h3><a href=\"views/jstl/testJstlCore.jsp\">Core 테스트</a></h3>\r\n");
      out.write("\t<h3><a href=\"views/jstl/testJstlFmt.jsp\">Fmt Library 테스트</a></h3>\r\n");
      out.write("\t<h3><a href=\"views/jstl/testJstlFunction.jsp\">Function Library 테스트</a></h3>\r\n");
      out.write("\t\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /views/common/menubar.jsp(67,1) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${!empty msg }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t<script>\r\n");
          out.write("\t\t\talert(\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${msg}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\");\r\n");
          out.write("\t\t</script>\r\n");
          out.write("\t\t");
          if (_jspx_meth_c_005fremove_005f0(_jspx_th_c_005fif_005f0, _jspx_page_context))
            return true;
          out.write('\r');
          out.write('\n');
          out.write('	');
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fremove_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:remove
    org.apache.taglibs.standard.tag.common.core.RemoveTag _jspx_th_c_005fremove_005f0 = (org.apache.taglibs.standard.tag.common.core.RemoveTag) _005fjspx_005ftagPool_005fc_005fremove_0026_005fvar_005fscope_005fnobody.get(org.apache.taglibs.standard.tag.common.core.RemoveTag.class);
    boolean _jspx_th_c_005fremove_005f0_reused = false;
    try {
      _jspx_th_c_005fremove_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fremove_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f0);
      // /views/common/menubar.jsp(71,2) name = var type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fremove_005f0.setVar("msg");
      // /views/common/menubar.jsp(71,2) name = scope type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fremove_005f0.setScope("session");
      int _jspx_eval_c_005fremove_005f0 = _jspx_th_c_005fremove_005f0.doStartTag();
      if (_jspx_th_c_005fremove_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fremove_0026_005fvar_005fscope_005fnobody.reuse(_jspx_th_c_005fremove_005f0);
      _jspx_th_c_005fremove_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fremove_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fremove_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /views/common/menubar.jsp(83,16) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ empty sessionScope.loginUser }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t                <a href=\"enrollForm.me\">회원가입</a> | \r\n");
          out.write("\t                <a data-toggle=\"modal\" data-target=\"#loginModal\">로그인</a> <!-- 모달의 원리 : 이 버튼 클릭시 data-target에 제시되어있는 해당 아이디의 div가 보이는 거임 -->\r\n");
          out.write("\t         \r\n");
          out.write("\t                \r\n");
          out.write("\t             \r\n");
          out.write("                ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f2_reused = false;
    try {
      _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f2.setParent(null);
      // /views/common/menubar.jsp(92,16) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${!empty sessionScope.loginUser }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
      if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t                <label>");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginUser.userName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("님 환영합니다</label> &nbsp;&nbsp;\r\n");
          out.write("\t                <a href=\"myPage.me\">마이페이지</a>\r\n");
          out.write("\t                <a href=\"logout.me\">로그아웃</a>\r\n");
          out.write("                ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
      _jspx_th_c_005fif_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f2_reused);
    }
    return false;
  }
}
